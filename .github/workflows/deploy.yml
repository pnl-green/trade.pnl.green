name: Deploy to EC2

on:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.79.0"
          targets: x86_64-unknown-linux-gnu

      - name: Compile
        working-directory: ./backend
        shell: bash
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Build archive
        working-directory: ./backend
        shell: bash
        run: |
          echo "SERVER_HOST=${{ secrets.SERVER_HOST }}" >> .env    
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env    

          echo "WS_HOST=${{ secrets.WS_HOST }}" >> .env
          echo "WS_PORT=${{ secrets.WS_PORT }}" >> .env

          echo "LEVEL=${{ secrets.LEVEL }}" >> .env    

          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env    

          echo "COOKIE_KEY=${{ secrets.COOKIE_KEY }}" >> .env

          tar -czf backend.tar.gz .env -C target/x86_64-unknown-linux-gnu/release/ backend
          echo "ASSET=${PWD}/backend.tar.gz" >> $GITHUB_ENV

      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.EC2_SERVER_USERNAME }}
          key: ${{ secrets.EC2_SERVER_KEY }}
          source: ${{ env.ASSET }}
          target: ${{ secrets.EC2_SERVER_TARGET }}

      - name: Restart server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.EC2_SERVER_USERNAME }}
          key: ${{ secrets.EC2_SERVER_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd ${{ secrets.EC2_SERVER_TARGET }}
            tar -xfv ${{ env.ASSET }}
            rm ${{ env.ASSET }}
            pm2 restart all
